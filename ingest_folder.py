import sys
import os
import json
from pathlib import Path
from tqdm import tqdm
from tools import (
    file_iter, sha256_of_file, short_id, guess_category, 
    norm_title, summarize_placeholder, validate_file_path, format_file_size
)

def main():
    """–û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –∑–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏—è –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ –æ—Ç –¥–∞–¥–µ–Ω–∞ –ø–∞–ø–∫–∞."""
    if len(sys.argv) < 2:
        print("–£–ø–æ—Ç—Ä–µ–±–∞: python ingest_folder.py <–ø–∞–ø–∫–∞>")
        print("–ü—Ä–∏–º–µ—Ä: python ingest_folder.py archives")
        sys.exit(1)

    root_path = sys.argv[1]
    root = Path(root_path).resolve()
    
    if not root.exists():
        print(f"–ì—Ä–µ—à–∫–∞: –ü–∞–ø–∫–∞—Ç–∞ '{root}' –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞.")
        sys.exit(1)
    
    if not root.is_dir():
        print(f"–ì—Ä–µ—à–∫–∞: '{root}' –Ω–µ –µ –ø–∞–ø–∫–∞.")
        sys.exit(1)

    # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –∏–∑—Ö–æ–¥–Ω–∞ –ø–∞–ø–∫–∞
    out_dir = Path('out')
    out_dir.mkdir(parents=True, exist_ok=True)
    
    db_path = out_dir / 'MANIFEST.json'
    db = []

    # –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏ –¥–∞–Ω–Ω–∏
    if db_path.exists():
        try:
            with open(db_path, 'r', encoding='utf-8') as f:
                db = json.load(f)
            print(f"–ó–∞—Ä–µ–¥–µ–Ω–∏ {len(db)} —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—â–∏ –∑–∞–ø–∏—Å–∞ –æ—Ç MANIFEST.json")
        except Exception as e:
            print(f"–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ MANIFEST.json: {e}")
            print("–ó–∞–ø–æ—á–≤–∞–º —Å –ø—Ä–∞–∑–Ω–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω–∏.")
            db = []

    # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ —Ä–µ—á–Ω–∏–∫ –∑–∞ –±—ä—Ä–∑ –¥–æ—Å—Ç—ä–ø –ø–æ SHA256
    by_sha = {r.get('sha256'): r for r in db if r.get('sha256')}

    # –°—ä–±–∏—Ä–∞–Ω–µ –Ω–∞ –≤—Å–∏—á–∫–∏ —Ñ–∞–π–ª–æ–≤–µ –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞
    all_files = list(file_iter(root))
    print(f"–ù–∞–º–µ—Ä–µ–Ω–∏ {len(all_files)} —Ñ–∞–π–ª–∞ –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ '{root}'")

    added = 0
    skipped = 0
    errors = 0

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ—Ç–µ —Å –ø—Ä–æ–≥—Ä–µ—Å –±–∞—Ä
    for p in tqdm(all_files, desc="–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ñ–∞–π–ª–æ–≤–µ"):
        try:
            if not validate_file_path(p):
                errors += 1
                continue
                
            sha = sha256_of_file(p)
            if not sha:  # –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —á–µ—Ç–µ–Ω–µ –Ω–∞ —Ñ–∞–π–ª–∞
                errors += 1
                continue
                
            if sha in by_sha:
                skipped += 1
                continue

            # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ –Ω–æ–≤ –∑–∞–ø–∏—Å
            rec = {
                "id": short_id(sha),
                "title": norm_title(p.name),
                "category": guess_category(p),
                "tags": [],
                "date": None,
                "uri": str(p.as_posix()),
                "size": p.stat().st_size,
                "sha256": sha,
                "summary_short": summarize_placeholder(p)
            }
            
            db.append(rec)
            by_sha[sha] = rec
            added += 1

        except Exception as e:
            print(f"\n–ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ '{p}': {e}")
            errors += 1

    # –ó–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ –æ–±–Ω–æ–≤–µ–Ω–∞—Ç–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω–∏
    try:
        with open(db_path, 'w', encoding='utf-8') as f:
            json.dump(db, f, ensure_ascii=False, indent=2)
        
        print(f"\n‚úÖ –ò–Ω–¥–µ–∫—Å–∞—Ü–∏—è—Ç–∞ –∑–∞–≤—ä—Ä—à–∏ —É—Å–ø–µ—à–Ω–æ!")
        print(f"üìÅ –ù–æ–≤–∏ —Ñ–∞–π–ª–æ–≤–µ: {added}")
        print(f"‚è≠Ô∏è  –ü—Ä–æ–ø—É—Å–Ω–∞—Ç–∏ (–¥—É–±–ª–∏–∫–∞—Ç–∏): {skipped}")
        print(f"‚ùå –ì—Ä–µ—à–∫–∏: {errors}")
        print(f"üìä –û–±—â–æ –∑–∞–ø–∏—Å–∏ –≤ –±–∞–∑–∞—Ç–∞: {len(db)}")
        print(f"üíæ MANIFEST.json –∑–∞–ø–∏—Å–∞–Ω –≤: {db_path}")
        
        if added > 0:
            print(f"\nüîÑ –°–ª–µ–¥–≤–∞—â–∞ —Å—Ç—ä–ø–∫–∞: python manifest.py (–∑–∞ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ CSV)")
            
    except Exception as e:
        print(f"\n‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –∑–∞–ø–∞–∑–≤–∞–Ω–µ –Ω–∞ MANIFEST.json: {e}")
        sys.exit(1)

if __name__ == '__main__':
    main()
