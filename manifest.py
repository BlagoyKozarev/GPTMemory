import json
from pathlib import Path
import pandas as pd
from tools import format_file_size

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç–∏
OUT = Path('out')
OUT.mkdir(parents=True, exist_ok=True)
db_path = OUT / 'MANIFEST.json'
csv_path = OUT / 'MANIFEST.csv'

def main():
    """–ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞ MANIFEST.json –≤ CSV —Ñ–æ—Ä–º–∞—Ç —Å –ø–æ–¥—Ä–µ–¥–µ–Ω–∏ –¥–∞–Ω–Ω–∏."""
    
    if not db_path.exists():
        print("‚ùå –ù—è–º–∞ MANIFEST.json —Ñ–∞–π–ª.")
        print("üîÑ –ò–∑–ø—ä–ª–Ω–µ—Ç–µ –ø—ä—Ä–≤–æ: python ingest_folder.py archives")
        return

    try:
        # –ó–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ
        with open(db_path, 'r', encoding='utf-8') as f:
            data = json.load(f)
        
        if not data:
            print("‚ö†Ô∏è  MANIFEST.json –µ –ø—Ä–∞–∑–µ–Ω.")
            return

        print(f"üìä –ó–∞—Ä–µ–∂–¥–∞–º {len(data)} –∑–∞–ø–∏—Å–∞ –æ—Ç MANIFEST.json...")

        # –°–æ—Ä—Ç–∏—Ä–∞–Ω–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –∏ –∑–∞–≥–ª–∞–≤–∏–µ
        data = sorted(data, key=lambda r: (r.get('category', ''), r.get('title', '')))

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –Ω–∞ –¥–∞–Ω–Ω–∏—Ç–µ –∑–∞ DataFrame
        processed_data = []
        for record in data:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞ —Ç–∞–≥–æ–≤–µ - –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–∞–Ω–µ –≤ string
            tags = record.get('tags', [])
            if isinstance(tags, list):
                tags_str = ','.join(tags) if tags else ''
            else:
                tags_str = str(tags)

            processed_record = {
                "id": record.get('id', ''),
                "title": record.get('title', ''),
                "category": record.get('category', ''),
                "tags": tags_str,
                "date": record.get('date', ''),
                "uri": record.get('uri', ''),
                "size": record.get('size', 0),
                "size_formatted": format_file_size(record.get('size', 0)),
                "sha256": record.get('sha256', ''),
                "summary_short": record.get('summary_short', '')
            }
            processed_data.append(processed_record)

        # –°—ä–∑–¥–∞–≤–∞–Ω–µ –Ω–∞ DataFrame
        df = pd.DataFrame(processed_data, columns=[
            "id", "title", "category", "tags", "date", "uri", 
            "size", "size_formatted", "sha256", "summary_short"
        ])

        # –ó–∞–ø–∞–∑–≤–∞–Ω–µ –≤ CSV —Å –ø—Ä–∞–≤–∏–ª–Ω–æ –∫–æ–¥–∏—Ä–∞–Ω–µ
        df.to_csv(csv_path, index=False, encoding='utf-8-sig')

        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_stats = df['category'].value_counts()
        total_size = df['size'].sum()

        print(f"‚úÖ CSV —Ñ–∞–π–ª—ä—Ç –µ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ: {csv_path}")
        print(f"üìÅ –û–±—â–æ –∑–∞–ø–∏—Å–∏: {len(df)}")
        print(f"üíæ –û–±—â —Ä–∞–∑–º–µ—Ä: {format_file_size(total_size)}")
        
        print(f"\nüìä –†–∞–∑–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:")
        for category, count in category_stats.items():
            category_size = df[df['category'] == category]['size'].sum()
            print(f"  ‚Ä¢ {category}: {count} —Ñ–∞–π–ª–∞ ({format_file_size(category_size)})")

        print(f"\nüìÑ CSV —Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∏: {', '.join(df.columns)}")
        
    except Exception as e:
        print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ CSV: {e}")
        return

if __name__ == '__main__':
    main()
